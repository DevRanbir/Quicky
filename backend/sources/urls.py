from django.urls import path, include
from rest_framework.routers import DefaultRouter
from .views import SourceViewSet
from . import views

router = DefaultRouter()
router.register(r'', SourceViewSet, basename='source') # Registers all standard actions

# urlpatterns will be automatically generated by the router for:
# - list (GET /api/sources/)
# - create (POST /api/sources/) (though we use custom actions for specific uploads)
# - retrieve (GET /api/sources/{pk}/)
# - update (PUT /api/sources/{pk}/)
# - partial_update (PATCH /api/sources/{pk}/)
# - destroy (DELETE /api/sources/{pk}/) (though we use a custom action for file deletion)

# Custom actions need to be explicitly mapped if not handled by router's detail/list routes
# However, @action decorator with detail=True/False handles routing for most cases.

urlpatterns = [
    path('', include(router.urls)),
    # Custom actions are typically available under /api/sources/{pk}/{action_name}/
    # or /api/sources/{action_name}/ if detail=False
    # Example: /api/sources/upload_file/
    # Example: /api/sources/{pk}/delete_file/
    # Example: /api/sources/{pk}/generate_questions/
    # The router handles these based on the @action decorator in views.py

    # Explicit path for the custom 'files' list endpoint if needed, though router should cover it
    # path('files/', SourceViewSet.as_view({'get': 'files'}), name='source-files-list'),
    
    # Explicit path for the custom 'delete_file' endpoint if needed for a non-standard name or method
    # path('<int:pk>/delete_source_file/', SourceViewSet.as_view({'delete': 'delete_file'}), name='source-delete-file'),
]